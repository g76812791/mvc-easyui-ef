@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>javascript弹幕</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width" />
    <style>
        .barrage .screen {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0px;
            right: 0px;
        }

            .barrage .screen .s_close {
                z-index: 2;
                top: 20px;
                right: 20px;
                position: absolute;
                text-decoration: none;
                width: 40px;
                height: 40px;
                border-radius: 20px;
                text-align: center;
                color: #fff;
                background: #000;
                line-height: 40px;
                display: none;
            }

            .barrage .screen .mask {
                position: relative;
                width: 100%;
                height: 100%;
                background: #000;
                opacity: 0.5;
                filter: alpha(opacity:1);
                z-index: 1;
            }

        .barrage {
            /*display: none;*/
            width: 100%;
            height: 600px;
            auto !!important;
            /*background-image: url("./img/bg.jpg");*/
            background-size: cover;
            background-repeat: no-repeat;
        }

            .barrage .screen .mask div {
                position: absolute;
                font-size: 20px;
                font-weight: bold;
                white-space: nowrap;
                line-height: 40px;
                z-index: 40;
            }

            .barrage .send {
                z-index: 1;
                width: 100%;
                height: 55px;
                background: #cccccc;
                position: absolute;
                bottom: 0px;
                text-align: center;
            }

                .barrage .send .s_text {
                    width: 600px;
                    height: 40px;
                    line-height: 10px;
                    font-size: 20px;
                    font-family: "微软雅黑";
                }

                .barrage .send .s_btn {
                    width: 105px;
                    height: 40px;
                    background: #22B14C;
                    color: #fff;
                }

        #textStyle {
            position: absolute;
            font-size: 24px;
            color: #fff;
        }
    </style>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.danmu.js"></script>
    <script src="~/Scripts/jQuery.headroom.min.js"></script>
    <script src="~/Scripts/respond.js"></script>
</head>

<body>

    <div class="barrage">
        <div class="screen">
            <a href="#" class="s_close">X</a>
            <div class="mask" id="danmu">
                <!--内容在这里显示-->
            </div>
        </div>

        <a id="url" style="display:none" href="~/api/WebSocket" class="s_close"></a>
        <a id="apiurl" style="display:none" href="~/api/Getstr" class="s_close"></a>
    </div>
    <script>
        var start = 0
        var apiurl = document.getElementById("apiurl");
        function showUnreadNews() {
            console.log("1"+start);
            $(document).ready(function () {
                $.ajax({
                    type: "GET",
                    url: apiurl+"?startcount="+start,
                    dataType: "json",
                    success: function (msg) {
                        //alert(msg);
                        //$('#danmu').data("danmu_array").length = 0;
                        danmuspeed = 15000;
                        if (msg.success)
                        {
                            //var time = 12000 / msg.count;
                            start = msg.startcount;
                            $.each(msg.strs, function (id, message) {
                                //setTimeout(send(message), time);
                                send(message);
                            });
                        }
                        $.each(msg, function (id, title) {
                            $("#news").append("<a href=detailnews.aspx?id=" + id + ">" + title + "</a><br>");
                        });
                    }
                });
            });
        }
        setInterval('showUnreadNews()', 1000);
        showUnreadNews();
        function send(mes) {
            var color = '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).slice(-6);
            var position = 0;
            var time = $('#danmu').data("nowtime") + 5;
            var size = 1;
            var text_obj = '{ "text":"' + mes + '","color":"' + color + '","size":"' + size + '","position":"' + position + '","time":' + time + ',"is":""}';
            var new_obj = eval('(' + text_obj + ')');
            $('#danmu').danmu("add_danmu", new_obj);
        };
     
    </script>
    <script type="text/javascript">

        var ws;
        function startsocket() {

            var test = document.getElementById("url");

            var url = test.href.replace("http", "ws");
            console.log(url);
            ws = new WebSocket(url);
            ws.onopen = function () {
                console.log("Connected!");
                ws.send("OK");
                console.log("open");
            };
            ws.onmessage = function (result) {
                var objJSON = JSON.parse(result.data);
                console.log(objJSON.mes);
                if (objJSON.count != 0) {
                    danmuspeed = objJSON.count;
                    console.log(danmuspeed);
                    $('#danmu').data("danmu_array").length = 0;
                }
                var color = '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).slice(-6);
                var position = 0;
                var time = $('#danmu').data("nowtime") + 5;
                var size = 1;
                var text_obj = '{ "text":"' + objJSON.mes + '","color":"' + color + '","size":"' + size + '","position":"' + position + '","time":' + time + ',"is":""}';
                var new_obj = eval('(' + text_obj + ')');
                $('#danmu').danmu("add_danmu", new_obj);
                //console.log($('#danmu').data("danmu_array").length);
                //ws.send("OK");
            };
            ws.onerror = function (error) {
                console.log(error.data);
            };
            ws.onclose = function () {
                console.log("Disconnected!");
            };
        };
    </script>


    <script>
        $("#danmu").danmu({
            height: "100%",  //弹幕区高度
            width: "100%",   //弹幕区宽度
            left: 0,    //区域的起始位置x坐标
            top: 0,  //区域的起始位置y坐标
            //zindex: 100,   //弹幕区域z-index属性
            speed: 20000,      //滚动弹幕的默认速度，这是数值值得是弹幕滚过每672像素所需要的时间（毫秒）
            //sumTime: 900,   //弹幕流的总时间
            //danmuLoop: false,   //是否循环播放弹幕
            //defaultFontColor: "#FFFFFF",   //弹幕的默认颜色
            fontSizeSmall: 16,     //小弹幕的字号大小
            FontSizeBig: 24,       //大弹幕的字号大小
            opacity: 1,          //默认弹幕透明度
            top_botton_danmu_time: 6000,   // 顶部底部弹幕持续时间（毫秒）
            //SubtitleProtection: false,     //是否字幕保护
            //positionOptimize: false,         //是否位置优化，位置优化是指像AB站那样弹幕主要漂浮于区域上半部分
            danmuss: {},
            //maxCountInScreen: 5000,   //屏幕上的最大的显示弹幕数目,弹幕数量过多时,优先加载最新的。
            //maxCountPerSec: 20000      //每分秒钟最多的弹幕数目,弹幕数量过多时,优先加载最新的。
        });

        var first = true;

        function timedCount() {
            $("#time").text($('#danmu').data("nowtime"));
            t = setTimeout("timedCount()", 50)
        }
        function setspeed(sp) {
            danmuspeed = sp;
        }

        function resumer() {

            $('#danmu').danmu('danmu_resume');
        }

        function settime() {
            var t = document.getElementById("set_time").value;
            t = parseInt(t)
            console.log(t)
            $('#danmu').data("nowtime", t);
        }
        resumer();
       // startsocket();
    </script>
</body>
</html>
